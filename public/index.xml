<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>My New Hugo Site</title>
        <link>http://localhost:1313/</link>
        <description>Recent content on My New Hugo Site</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Sat, 21 Sep 2024 10:36:14 +0800</lastBuildDate><atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>First</title>
        <link>http://localhost:1313/post/%E5%8D%8A%E5%AF%BC%E4%BD%93%E7%9F%A5%E8%AF%86/</link>
        <pubDate>Sat, 21 Sep 2024 10:36:14 +0800</pubDate>
        
        <guid>http://localhost:1313/post/%E5%8D%8A%E5%AF%BC%E4%BD%93%E7%9F%A5%E8%AF%86/</guid>
        <description>&lt;h1 id=&#34;双极退化效应&#34;&gt;双极退化效应
&lt;/h1&gt;&lt;p&gt;PN结（例如MOSFET的体二极管）导电时，由于电子与空穴的复合释放出的能量导致晶体结构中的堆垛层错（Stacking Faults, SFs）在基面位错（Basal Plane Dislocations, BPDs）处蔓延，从而引起器件性能退化的现象，双极退化效应会导致器件的导通电阻增大，体二极管的开启电压增大，从而增加了器件在第三象限的导通损耗，同时也可能导致器件反向漏电流的增加，研究提出集成低势垒二极管的SiC MOSFET器件新结构（LBD-MOSFET），通过在一侧基区上方注入N阱，降低了漏源间的电子势垒，形成了一个低势垒二极管，有效避免了体二极管开通所导致的双极退化效应&lt;/p&gt;
&lt;h1 id=&#34;sic体二极管&#34;&gt;SiC体二极管
&lt;/h1&gt;&lt;p&gt;拐点电压较大（3V）较高传导损耗，双极退化效应，堆垛层错⽣⻓到 N 漂移区域，导致更⾼的导
通电阻&lt;/p&gt;
&lt;h2 id=&#34;击穿判断得看电场&#34;&gt;击穿判断得看电场
&lt;/h2&gt;</description>
        </item>
        <item>
        <title>希腊字母表</title>
        <link>http://localhost:1313/post/%E5%B8%8C%E8%85%8A%E5%AD%97%E6%AF%8D%E8%A1%A8/</link>
        <pubDate>Sat, 21 Sep 2024 10:36:14 +0800</pubDate>
        
        <guid>http://localhost:1313/post/%E5%B8%8C%E8%85%8A%E5%AD%97%E6%AF%8D%E8%A1%A8/</guid>
        <description>&lt;p&gt;以下是包含大小写希腊字母及其 LaTeX 表达式的统一表格，并包含不同形式的 \(\epsilon\)、\(\phi\)：&lt;/p&gt;
&lt;h3 id=&#34;希腊字母-latex-表达式表&#34;&gt;希腊字母 LaTeX 表达式表
&lt;/h3&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;希腊字母&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;小写 LaTeX 表达式&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;大写 LaTeX 表达式&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Α / α (Alpha / alpha)&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;\alpha&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;A&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Β / β (Beta / beta)&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;\beta&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;B&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Γ / γ (Gamma / gamma)&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;\gamma&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;\Gamma&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Δ / δ (Delta / delta)&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;\delta&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;\Delta&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Ε / ε (Epsilon / epsilon)&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;\epsilon&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;E&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;ϵ (varepsilon)&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;\varepsilon&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;em&gt;无&lt;/em&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Ζ / ζ (Zeta / zeta)&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;\zeta&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;Z&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Η / η (Eta / eta)&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;\eta&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;H&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Θ / θ (Theta / theta)&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;\theta&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;\Theta&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Ι / ι (Iota / iota)&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;\iota&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;I&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Κ / κ (Kappa / kappa)&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;\kappa&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;K&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Λ / λ (Lambda / lambda)&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;\lambda&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;\Lambda&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Μ / μ (Mu / mu)&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;\mu&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;M&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Ν / ν (Nu / nu)&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;\nu&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;N&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Ξ / ξ (Xi / xi)&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;\xi&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;\Xi&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Ο / ο (Omicron / omicron)&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;em&gt;没有标准表达式&lt;/em&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;O&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Π / π (Pi / pi)&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;\pi&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;\Pi&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Ρ / ρ (Rho / rho)&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;\rho&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;P&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Σ / σ (Sigma / sigma)&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;\sigma&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;\Sigma&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Τ / τ (Tau / tau)&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;\tau&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;T&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Υ / υ (Upsilon / upsilon)&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;\upsilon&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;\Upsilon&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Φ / φ (Phi / phi)&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;\phi&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;\Phi&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;ϕ (varphi)&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;\varphi&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;em&gt;无&lt;/em&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Χ / χ (Chi / chi)&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;\chi&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;X&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Ψ / ψ (Psi / psi)&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;\psi&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;\Psi&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Ω / ω (Omega / omega)&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;\omega&lt;/code&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;\Omega&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;说明&#34;&gt;说明：
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;小写字母有两种形式的 \(\epsilon\) 和 \(\phi\)：
&lt;ul&gt;
&lt;li&gt;\(\epsilon\) 使用 &lt;code&gt;\epsilon&lt;/code&gt;，\(\varepsilon\) 使用 &lt;code&gt;\varepsilon&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;\(\phi\) 使用 &lt;code&gt;\phi&lt;/code&gt;，\(\varphi\) 使用 &lt;code&gt;\varphi&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;大写字母如 Α (Alpha)、Β (Beta) 等与拉丁字母形式相同时，直接使用拉丁字母即可。&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>AboutME</title>
        <link>http://localhost:1313/about/</link>
        <pubDate>Sat, 21 Sep 2024 10:35:27 +0800</pubDate>
        
        <guid>http://localhost:1313/about/</guid>
        <description></description>
        </item>
        <item>
        <title>power</title>
        <link>http://localhost:1313/post/power-semiconductor/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/post/power-semiconductor/</guid>
        <description>&lt;h1 id=&#34;introduction&#34;&gt;introduction
&lt;/h1&gt;&lt;p&gt;损耗计算公式
&lt;/p&gt;
$$ P_\mathrm{L}(\mathrm{on})=\delta I_\mathrm{F}V_\mathrm{F} $$&lt;p&gt;
&lt;a class=&#34;link&#34; href=&#34;picture/%e6%8d%9f%e8%80%97.png&#34; &gt;power dissation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;饱和区漏极电流与栅极电压的关系
&lt;/p&gt;
$$ I_{D,sat}\propto(V_{GS}-V_{th})^2 $$&lt;p&gt;
由于饱和区收到沟道宽度调制影响，不仅收栅极电压还受到漏源电压$V_{DS}$ 的影响，所有削弱平方关系，使漏电流线性增长。&lt;/p&gt;
&lt;p&gt;双极性在工作时，少数载流子在起作用。其由三个部分构成，发射区（emmiter），基区（Base)和集电区（collector),NPN型晶体管工作时，发射极基极正偏，发射区多数载流子进入基区，成为基区中的少数载流子，紧接着在基区扩散到集电区中，由于基区很薄不会复合。基极集电极反偏，少数载流子迅速被集电区收集形成电流。&lt;br&gt;
当其切换到阻断状态时时必须把少数载流子移除，主要通过门极驱动电流和空穴电子对复合，在此过程造成大量的功率损耗，降低效率。&lt;br&gt;
因此倾向于单极性器件，典型的是肖特基整流管，通过金属半导体界面对电流进行整流。通常肖特基i二极管的阻断电压只能到100V超过后会增大导通压降，但SiC肖特基二极管可以实现高的击穿电压和低的导通压降，低的漂移区电阻，优秀的开关特性。
&lt;img src=&#34;http://localhost:1313/picture/Schottky-rectifier-structure.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;schottky&#34;
	
	
&gt;
u-mosfet即垂直型mosfet通过消除jfet区减少电阻&lt;br&gt;
GTO以及双极性晶体管需要很大的电流驱动以及减震电路来减少暂态过电压过大。于是提出mos双极性结构IGBT。
&lt;img src=&#34;http://localhost:1313/picture/GTO.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;GTO&#34;
	
	
&gt;
&lt;img src=&#34;http://localhost:1313/picture/UMOS-IGBT.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;UMOS-IGBT&#34;
	
	
&gt;
具有四层晶闸管
mos-control-thyristor
&lt;img src=&#34;http://localhost:1313/picture/MCT.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;MCT&#34;
	
	
&gt;
通过使四层晶闸管结构闭锁实现较低的导通压降。通过给mos的栅极施加正电压，激发mosfet导通，使阳极和阴极之间产生电流，启动晶闸管的自保留模式，晶闸管的少数载流子注入机制使电流迅速增大，从而保持导通状态，MCT进入低导通电阻状态。通过关闭晶闸管的正反馈效应来关闭MCT，栅极施加负电压驱动另一个MOSFET，使其在\(N_+\)发射极和p基区之间形成一个电流分流通道，这个通道使载流子流向栅极，减少关键PN结处的载流子流动，降低了NPN晶体管的电流增益，切断晶闸管的少数载流子流动，PNPN结构中的少数载流子被迅速抽出，使晶闸管失去正反馈效应，终止导通状态，晶闸管转换为高阻状态，MCT进入关断状态。
提出基极电阻控制晶闸管：BRT分流区相邻四层晶闸管结构
&lt;img src=&#34;http://localhost:1313/picture/BRT.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;BRT&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;16&#34;&gt;1.6
&lt;/h3&gt;&lt;p&gt;理想的drift区域假设为两边的惨杂浓度都是一致的，忽略结的曲率影响。泊松方程解出电场按三角形分布，其中单位面积电阻为
&lt;/p&gt;
$$ R_\mathrm{on.sp}=\left(\frac{W_\mathrm{D}}{q\mu_\mathrm{n}N_\mathrm{D}}\right) $$&lt;p&gt;
耗尽层宽度depletion width
&lt;/p&gt;
$$ W_\mathrm{D}=\frac{2BV}{E_\mathrm{C}} $$&lt;p&gt;
达到目标耐压需要的惨杂浓度
&lt;/p&gt;
$$N_\mathrm{D}=\frac{\varepsilon_\mathrm{S}{E_{\mathrm{C}}^{2}}}{2qBV}$$&lt;p&gt;
结合后理想漂移区的单位面积电阻
&lt;/p&gt;
$$ R_{\mathrm{on-ideal}}=\frac{4BV^{2}}{\varepsilon_{S}\mu_\mathrm{n}E_\mathrm{C}^{3}}$$&lt;p&gt;GaAs由于电子迁移率高，而SiC由于禁带宽度大导致两者的导通电阻很小。&lt;/p&gt;
&lt;h3 id=&#34;17&#34;&gt;1.7
&lt;/h3&gt;&lt;p&gt;临界击穿电压下的电荷密度公式
&lt;/p&gt;
$$ Q_\mathrm{optimum}=2qN_\mathrm{D}W_\mathrm{N}=\epsilon_\mathrm{S}E_\mathrm{C} $$&lt;p&gt;
在电荷耦合结构下的导通电阻：
&lt;/p&gt;
$$ R_\mathrm{D,sp}=\rho_\mathrm{D}\left(\frac{p}{W_\mathrm{N}}\right)t $$&lt;p&gt;
结合电阻率与惨杂浓度的关系
&lt;/p&gt;
$$ \rho=\frac{1}{q\cdot(n\cdot\mu_\mathrm{n}+p\cdot\mu_\mathrm{p})}$$&lt;p&gt;
得到
&lt;/p&gt;
$$ R_\mathrm{D,sp}=\frac{tp}{q\mu_\mathrm{N}N_\mathrm{D}W_\mathrm{N}}$$&lt;p&gt;
结合临界电荷得
&lt;/p&gt;
$$ R_\mathrm{D,sp}=\frac{2tp}{\mu_\mathrm{N}Q_\mathrm{optimum}}$$</description>
        </item>
        <item>
        <title>为什么要建个博客</title>
        <link>http://localhost:1313/post/%E5%8D%9A%E5%AE%A2/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/post/%E5%8D%9A%E5%AE%A2/</guid>
        <description>&lt;h2 id=&#34;过程&#34;&gt;过程
&lt;/h2&gt;&lt;p&gt;其实很早的时候就有想建立博客的想法，因为自己平常也会有记日记的习惯，总想用一些文字或者图片来记录当下的时光，不管是快乐还是悲伤，总得在哪些地方留下点痕迹才好，用文字来还原那时候的心情那时候的经历，证明那段时光自己是有心去记忆的，等到许多年后看到自己当初所做的事，所说的话，可能也会会心一笑吧。&lt;/p&gt;
&lt;h2 id=&#34;利用hugo简单搭建&#34;&gt;利用hugo简单搭建
&lt;/h2&gt;&lt;p&gt;当前的建站有很多种方式像是老牌的hexo，以及新的vue或者hugo，为了简单，和响应快些，于是选择&lt;a class=&#34;link&#34; href=&#34;https://gohugo.io/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;hugo&lt;/a&gt;这种新型的静态网站部署方式。&lt;/p&gt;
&lt;h3 id=&#34;前提准备&#34;&gt;前提准备
&lt;/h3&gt;&lt;p&gt;确保电脑中已安装git&lt;/p&gt;
&lt;h3 id=&#34;步骤&#34;&gt;步骤
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;首先使用winget下载hugo-extend，记住是增强版，为了让所选的主题可以正常运行。&lt;/li&gt;
&lt;/ol&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ winget install Hugo.Hugo.Extended
$ hugo version #验证下是否正常安装
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;当初随便就下载了普通版结果到主题的文档中去看，需要下载增强版。等到我想要卸载的时候，以为&lt;code&gt;uninstall&lt;/code&gt;后接的是它的id，结果winget识别不到这个包，最后直接用hugo才正常识别并卸载，原来卸载程序只认名称不认ID。
2. 下载好后利用hugo快速生成站点&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ hugo new site /path/to/site
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;site后跟着自己想设定的文件位置,在进入到site文件夹下，将主题git克隆到目录下，于是生成的文件目录如下：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ git clone https://github.com/CaiJimmy/hugo-theme-stack/ themes/hugo-theme-stack
&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;├─archetypes
├─assets
├─content
│  └─post
├─data
├─i18n
├─layouts
├─public
│  ├─about
│  ├─categories
│  │  └─page
│  │      └─1
│  ├─img
│  ├─page
│  │  └─1
│  ├─post
│  │  ├─page
│  │  │  └─1
│  │  └─博客
│  ├─scss
│  ├─tags
│  │  └─page
│  │      └─1
│  └─ts
├─resources
│  └─_gen
│      ├─assets
│      │  └─scss
│      └─images
│          └─img
├─static
└─themes
    └─hugo-theme-stack
        ├─.devcontainer
        ├─.github
        │  └─ISSUE_TEMPLATE
        ├─archetypes
        ├─assets
        │  ├─icons
        │  ├─img
        │  ├─scss
        │  │  ├─external
        │  │  └─partials
        │  │      ├─comments
        │  │      ├─highlight
        │  │      └─layout
        │  └─ts
        ├─data
        ├─exampleSite
        │  └─content
        │      ├─categories
        │      │  └─Test
        │      ├─page
        │      │  ├─about
        │      │  ├─archives
        │      │  ├─links
        │      │  └─search
        │      └─post
        │          ├─chinese-test
        │          ├─emoji-support
        │          ├─markdown-syntax
        │          ├─math-typesetting
        │          ├─placeholder-text
        │          └─rich-content
        ├─i18n
        ├─images
        └─layouts
            ├─page
            ├─partials
            │  ├─article
            │  │  └─components
            │  ├─article-list
            │  ├─comments
            │  │  └─provider
            │  ├─data
            │  ├─footer
            │  │  └─components
            │  ├─head
            │  │  └─opengraph
            │  │      └─provider
            │  ├─helper
            │  ├─sidebar
            │  └─widget
            ├─shortcodes
            └─_default
                └─_markup
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;以下是各个文件夹的意义&lt;/p&gt;
&lt;h3 id=&#34;1-configtoml--configyaml--configjson&#34;&gt;1. &lt;strong&gt;&lt;code&gt;config.toml&lt;/code&gt; / &lt;code&gt;config.yaml&lt;/code&gt; / &lt;code&gt;config.json&lt;/code&gt;&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;这是站点的配置文件，根据你选择的配置格式来生成 (&lt;code&gt;TOML&lt;/code&gt;, &lt;code&gt;YAML&lt;/code&gt;, 或 &lt;code&gt;JSON&lt;/code&gt;)。这个文件包含站点的全局配置，例如站点的名称、语言、基URL、菜单、SEO 设置等。&lt;/p&gt;
&lt;h3 id=&#34;2-content&#34;&gt;2. &lt;strong&gt;&lt;code&gt;content/&lt;/code&gt;&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;此目录存放网站的所有内容文件。通常内容以 &lt;code&gt;.md&lt;/code&gt;（Markdown）格式编写，按类型组织内容（例如文章、页面、博客等）。默认情况下，Hugo 会根据文件结构生成相应的 URL。例如，如果你在 &lt;code&gt;content/blog/&lt;/code&gt; 目录下创建一个 Markdown 文件，Hugo 会生成对应的 &lt;code&gt;/blog/&lt;/code&gt; 路径。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;content/posts/&lt;/code&gt;&lt;/strong&gt;：通常存放博客文章。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;content/about.md&lt;/code&gt;&lt;/strong&gt;：单页面内容，如关于页面。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-layouts&#34;&gt;3. &lt;strong&gt;&lt;code&gt;layouts/&lt;/code&gt;&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;此目录用于存放模板文件，它决定了站点的页面如何呈现。Hugo 的模板系统使用 Go 语言的模板语法。Hugo 会根据内容类型和布局定义找到对应的模板。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;layouts/_default/&lt;/code&gt;&lt;/strong&gt;：这是默认布局文件夹，包含 &lt;code&gt;single.html&lt;/code&gt;（单个页面布局）、&lt;code&gt;list.html&lt;/code&gt;（列表页面布局）等文件。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;layouts/partials/&lt;/code&gt;&lt;/strong&gt;：用于存放页面的可重用部分，比如头部、页脚等。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;layouts/index.html&lt;/code&gt;&lt;/strong&gt;：站点首页的模板。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;4-static&#34;&gt;4. &lt;strong&gt;&lt;code&gt;static/&lt;/code&gt;&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;此目录用于存放静态资源，比如图片、JavaScript 文件、CSS 文件等。它们不会经过 Hugo 的编译，Hugo 会将这些文件原样复制到生成的站点目录中。该文件夹内的内容会被直接映射到站点的根 URL，例如 &lt;code&gt;static/js/main.js&lt;/code&gt; 会映射为 &lt;code&gt;/js/main.js&lt;/code&gt;。&lt;/p&gt;
&lt;h3 id=&#34;5-themes&#34;&gt;5. &lt;strong&gt;&lt;code&gt;themes/&lt;/code&gt;&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;存放 Hugo 主题的文件夹。你可以在这里放置主题，或通过 Git 将主题克隆到该目录下。主题会包含自己的 &lt;code&gt;layouts&lt;/code&gt;、&lt;code&gt;static&lt;/code&gt;、&lt;code&gt;content&lt;/code&gt; 等子目录，可以直接覆盖站点默认文件。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;themes/your-theme-name/&lt;/code&gt;&lt;/strong&gt;：存放特定主题文件的文件夹。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;6-archetypes&#34;&gt;6. &lt;strong&gt;&lt;code&gt;archetypes/&lt;/code&gt;&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;此目录用于存放内容的原型模板。当你使用 &lt;code&gt;hugo new&lt;/code&gt; 命令创建新内容时，Hugo 会根据此目录中的模板生成新文件。例如，&lt;code&gt;archetypes/default.md&lt;/code&gt; 可以用于定义所有新文章的默认结构。&lt;/p&gt;
&lt;h3 id=&#34;7-data&#34;&gt;7. &lt;strong&gt;&lt;code&gt;data/&lt;/code&gt;&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;此目录用于存放结构化数据文件，可以是 &lt;code&gt;.json&lt;/code&gt;、&lt;code&gt;.yaml&lt;/code&gt; 或 &lt;code&gt;.toml&lt;/code&gt; 文件。这些数据可以在模板中通过 Hugo 的模板语言引用和使用，适用于一些动态或可配置的数据展示需求。&lt;/p&gt;
&lt;h3 id=&#34;8-resources&#34;&gt;8. &lt;strong&gt;&lt;code&gt;resources/&lt;/code&gt;&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;此目录存放 Hugo 生成的缓存或资源文件，通常是用于图像处理、CSS 最小化等处理后的文件。它帮助提升 Hugo 编译速度，并可以防止每次重新生成站点时重复处理相同资源。&lt;/p&gt;
&lt;h3 id=&#34;9-public&#34;&gt;9. &lt;strong&gt;&lt;code&gt;public/&lt;/code&gt;&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;这个目录是 Hugo 生成的静态站点的输出目录。当你运行 &lt;code&gt;hugo&lt;/code&gt; 命令时，Hugo 会将所有内容、布局和静态资源结合起来生成最终的站点文件，并将它们输出到 &lt;code&gt;public/&lt;/code&gt; 目录中。你可以将这个目录上传到服务器以部署站点。&lt;/p&gt;
&lt;h3 id=&#34;10-assets&#34;&gt;10. &lt;strong&gt;&lt;code&gt;assets/&lt;/code&gt;&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;此目录专门存放你希望通过 Hugo 的资产处理管道（例如 SASS/SCSS 编译、图片优化等）处理的资源文件。Hugo 不会直接复制 &lt;code&gt;assets/&lt;/code&gt; 中的文件，而是会对其进行相应处理后输出到 &lt;code&gt;resources/&lt;/code&gt; 目录中。&lt;/p&gt;
&lt;h3 id=&#34;11-i18n&#34;&gt;11. &lt;strong&gt;&lt;code&gt;i18n/&lt;/code&gt;&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;这个文件夹用于支持hugo多语言站点的实现，用于存储语言翻译文件，其中每个翻译文件以&lt;code&gt;.toml&lt;/code&gt;格式存储，每个文件对应一种语言，翻译文件中定义了不同语言的键值对，键（ket）通常用作模板中的占位符，值（value）是相对应语言的文本&lt;/p&gt;
&lt;h3 id=&#34;总结&#34;&gt;总结
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;content/&lt;/code&gt;&lt;/strong&gt;：网站的主要内容。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;layouts/&lt;/code&gt;&lt;/strong&gt;：控制页面布局的模板。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;static/&lt;/code&gt;&lt;/strong&gt;：静态资源，如图片、CSS、JS。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;themes/&lt;/code&gt;&lt;/strong&gt;：存放主题文件。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;public/&lt;/code&gt;&lt;/strong&gt;：生成的最终站点文件。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;assets/&lt;/code&gt;&lt;/strong&gt;：需要处理的资源。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;data/&lt;/code&gt;&lt;/strong&gt;：结构化数据文件。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;archetypes/&lt;/code&gt;&lt;/strong&gt;：新内容的模板。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;i18n/&lt;/code&gt;&lt;/strong&gt;: 存储翻译文件&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;调试&#34;&gt;调试
&lt;/h2&gt;&lt;h3 id=&#34;主题&#34;&gt;主题
&lt;/h3&gt;&lt;p&gt;选用的主题是&lt;a class=&#34;link&#34; href=&#34;https://stack.jimmycai.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;stack&lt;/a&gt;,这个主题的star数还是挺多的，比起著名的papermod更新更加频繁些，前者已经有段时间没有更新了，于是就选用了这个主题。&lt;/p&gt;
&lt;h3 id=&#34;博客文件开头&#34;&gt;博客文件开头
&lt;/h3&gt;&lt;p&gt;记住在每段博客的开头添加以下代码&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;+++
title = &amp;#39;First&amp;#39;
date = 2024-09-21T10:36:14+08:00
draft = true #设定允不允许hugo将文章公开发布
+++
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;添加latex支持&#34;&gt;添加latex支持
&lt;/h3&gt;&lt;p&gt;在&lt;code&gt;themes/hugo-theme-stack/layouts/partials&lt;/code&gt;文件夹下找head.html文件添加以下代码&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;window.&lt;span style=&#34;color:#a6e22e&#34;&gt;MathJax&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;tex&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#a6e22e&#34;&gt;inlineMath&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;\\(&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;\\)&amp;#39;&lt;/span&gt;]],
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#a6e22e&#34;&gt;displayMath&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; [[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;$$&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;$$&amp;#39;&lt;/span&gt;], [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;\\[&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;\\]&amp;#39;&lt;/span&gt;]],
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#a6e22e&#34;&gt;processEscapes&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    },
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;svg&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#a6e22e&#34;&gt;fontCache&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;global&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;};
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;text/javascript&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;async&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js&amp;#34;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;同时在site文件夹下的hugo.toml中添加以下代码&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-toml&#34; data-lang=&#34;toml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;markup&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  [&lt;span style=&#34;color:#a6e22e&#34;&gt;markup&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;goldmark&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    [&lt;span style=&#34;color:#a6e22e&#34;&gt;markup&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;goldmark&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;extensions&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      [&lt;span style=&#34;color:#a6e22e&#34;&gt;markup&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;goldmark&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;extensions&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;passthrough&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;enable&lt;/span&gt; = &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        [&lt;span style=&#34;color:#a6e22e&#34;&gt;markup&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;goldmark&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;extensions&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;passthrough&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;delimiters&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#a6e22e&#34;&gt;block&lt;/span&gt; = [[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;\[&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;\]&amp;#39;&lt;/span&gt;], [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;$$&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;$$&amp;#39;&lt;/span&gt;]]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#a6e22e&#34;&gt;inline&lt;/span&gt; = [[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;\(&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;\)&amp;#39;&lt;/span&gt;]]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;params&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;math&lt;/span&gt; = &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;测试：
&lt;/p&gt;
$$N_\mathrm{D}=\frac{\varepsilon_\mathrm{S}{E_{\mathrm{C}}^{2}}}{2qBV}$$&lt;h2 id=&#34;网站部署到github由于不知道怎么去除分支保护导致耽搁了好久&#34;&gt;网站部署到github（由于不知道怎么去除分支保护导致耽搁了好久
&lt;/h2&gt;&lt;p&gt;部署分支一定要到main上，不然由分支于保护，无法部署到GitHub actions上&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
